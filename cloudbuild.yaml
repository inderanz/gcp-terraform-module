steps:

  # Step 2: Check out the repository using GITHUB_TOKEN
  # Step 2: Check out the repository using GITHUB_TOKEN
  - name: "gcr.io/cloud-builders/git"
    entrypoint: "bash"
    secretEnv:
    - GITHUB_TOKEN
    args:
    - "-c"
    - |
      echo "Cloning from GitHub with authentication..."
      echo "Using token: $$GITHUB_TOKEN"  # Debugging output, should not expose sensitive token in real production.
      git clone https://$$GITHUB_TOKEN@github.com/inderanz/gcp-terraform-module.git .
      git remote update
      git fetch
      git checkout origin/main


  # Step 3: Install Node.js and release-please
  - name: "node:16"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        echo "Installing release-please..."
        npm install -g release-please

  # Step 4: Generate Release PR
  - name: "node:16"
    entrypoint: "bash"
    secretEnv:
      - GITHUB_TOKEN
    args:
      - "-c"
      - |
        echo "Installing release-please again for Step 4..."  # Ensure installation in this step
        npm install -g release-please  # Install the tool in Step 4 as well
        echo "Generating Release PR..."
        release-please github-release-pr \
          --repo-url=$$_HEAD_REPO_URL \
          --package-name=gcp-terraform-module \
          --default-branch=$BRANCH_NAME \
          --token=$$GITHUB_TOKEN

  # Step 5: Optional - Create GitHub Release
  - name: "node:16"
    entrypoint: "bash"
    secretEnv:
      - GITHUB_TOKEN
    args:
      - "-c"
      - |
        echo "Publishing Release..."
        release-please github-release \
          --repo-url=$$_HEAD_REPO_URL\
          --token=$$GITHUB_TOKEN

availableSecrets:
  secretManager:
    - versionName: "projects/354449891279/secrets/github-token/versions/latest"
      env: "GITHUB_TOKEN"

substitutions:
  _REPO_NAME: "gcp-terraform-module"  
  _BRANCH_NAME: "main"               
  _HEAD_REPO_URL: "https://github.com/inderanz/gcp-terraform-module"

timeout: "1200s"
options:
  logging: CLOUD_LOGGING_ONLY